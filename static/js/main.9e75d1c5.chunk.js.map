{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","isLoading","setIsLoading","passCtx","newPassRef","useRef","onSubmit","event","preventDefault","enteredpass","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","type","minLength","id","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","auth","url","enteredEmail","enteredPassword","email","ok","json","data","errorMessage","error","message","Error","expireTime","expiresIn","toISOString","catch","err","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9e75d1c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"control\":\"ProfileForm_control__2YUZH\",\"action\":\"ProfileForm_action__opJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  // expirationTime --> new Date(new Date().getTime() + +data.expiresIn*1000)\n  // data.expiresIn is the time return by firebase as 1hr of 3600 seconds\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    // 3600 milli seconds of 1min\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n  \n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  // since it's a dependency in useEffect\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    // for local storage we can set the object as well by converting it into json \n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  const handleLogout = ()=>{\n    authCtx.logout();\n    \n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={handleLogout}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext, useState } from 'react';\nimport classes from './ProfileForm.module.css';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nconst ProfileForm = () => {\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false);\n  const passCtx = useContext(AuthContext);\n  const newPassRef = useRef();\n  const submitHandler = (event)=>{\n    event.preventDefault();\n    const enteredpass = newPassRef.current.value\n    setIsLoading(true);\n    fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDFOSpA5pc4rynxb2GMJ7rC9UiyaENlUlM\", {\n      method : \"POST\",\n      body : JSON.stringify({\n        idToken : passCtx.token,\n        password : enteredpass,\n        returnSecureToken : true,\n      }),\n      headers : {\n        'Content-Type' : \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false)\n      history.replace(\"/auth\");     // replace means you can't use the back button \n      // console.log(\"success\")\n    })\n  }\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' minLength=\"7\" id='new-password' ref={newPassRef} />\n      </div>\n      <div className={classes.action}>\n        {!isLoading && <button>Change Password</button>}\n        {isLoading && <p>Updating...</p>}\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\n\nconst AuthForm = () => {\n  const history = useHistory()\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFOSpA5pc4rynxb2GMJ7rC9UiyaENlUlM';\n    } else {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDFOSpA5pc4rynxb2GMJ7rC9UiyaENlUlM';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })// data return of res at line 47 will be capture here\n      .then((data) => {\n        const expireTime = new Date(new Date().getTime() + +data.expiresIn*1000)\n        console.log(data);\n        authCtx.login(data.idToken, expireTime.toISOString());\n        history.replace(\"/\")\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          {/* {authCtx.isLoggedIn ? <HomePage /> : <Redirect to=\"/auth\" />} */}\n      \n          <HomePage />\n     \n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n\n        <Route path='*'>\n        {/* any other path than above mention will redirect the user to homepage  */}\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n"],"sourceRoot":""}